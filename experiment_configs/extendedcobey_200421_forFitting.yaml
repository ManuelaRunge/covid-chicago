experiment_setup_parameters:
  'number_of_samples': 200
  'number_of_runs': 1
  'duration': 150
  'monitoring_samples': 150 # needs to be smaller than duration
  'random_seed': 19
  'initialAs': 10
fixed_parameters_region_specific:
  populations:
    'IL': 12830632
    'NMH_catchment': 315000
    'Chicago': 2700000
    'EMS_1': 736370
    'EMS_2': 1124941
    'EMS_3': 619366
    'EMS_4': 698886
    'EMS_5': 417674
    'EMS_6': 788985
    'EMS_7': 1814891
    'EMS_8': 1673408
    'EMS_9': 1970275
    'EMS_10': 1052839
    'EMS_11': 2716921
  startdate:
    'NMH_catchment': 2020-02-28
    'Chicago': 2020-02-20  
    'IL': 2020-01-01  # used for spatial model 
    'EMS_1': 2020-01-01       
    'EMS_2': 2020-01-01
    'EMS_3': 2020-01-01       
    'EMS_4': 2020-01-01
    'EMS_5': 2020-01-01       
    'EMS_6': 2020-01-01
    'EMS_7': 2020-01-01       
    'EMS_8': 2020-01-01
    'EMS_9': 2020-01-01       
    'EMS_10': 2020-01-01
    'EMS_11': 2020-01-01
fixed_parameters_global:
sampled_parameters:
  'incubation_pd':
    np.random: uniform
    function_kwargs: {'low': 5.4, 'high': 5.4}
  'time_to_symptoms':
    np.random: uniform
    function_kwargs: {'low': 3.65, 'high':3.65}
  'time_to_hospitalization':
    np.random: uniform
    function_kwargs: {'low':4.5, 'high':4.5}
  'time_to_critical':
    np.random: uniform
    function_kwargs: {'low':4, 'high':4}
  'time_to_death':
    np.random: uniform
    function_kwargs: {'low':11.5, 'high':11.5}
  'recovery_rate_asymp':
    np.random: uniform
    function_kwargs: {'low':13.5, 'high':13.5}
  'recovery_rate_mild':
    np.random: uniform
    function_kwargs: {'low':13.5, 'high':13.5}
  'recovery_rate_hosp':
    np.random: uniform
    function_kwargs: {'low':6, 'high':6}
  'recovery_rate_crit':
    np.random: uniform
    function_kwargs: {'low':10, 'high':10}
  'fraction_symptomatic':
    np.random: uniform
    function_kwargs: {'low':0.6, 'high':0.6}
  'fraction_severe':
    np.random: uniform
    function_kwargs: {'low':0.15, 'high':0.15}
  'fraction_critical':
    np.random: uniform
    function_kwargs: {'low':0.275, 'high':0.275}
  'cfr': 
    np.random: uniform
    function_kwargs: {'low':0.025, 'high':0.025}
  'reduced_inf_of_det_cases':
    np.random: uniform
    function_kwargs: {'low':0.15, 'high':0.15}
  'd_Sym':
    np.random: uniform
    function_kwargs: {'low':0.01, 'high':0.05}
  'd_Sys':
    np.random: uniform
    function_kwargs: {'low':0.01, 'high':0.05} 
  'd_As':
    np.random: uniform
    function_kwargs: {'low':0, 'high':0}
  'social_multiplier_1':
    np.random: uniform
    function_kwargs: {'low':1, 'high':1}
  'social_multiplier_2':
    np.random: uniform
    function_kwargs: {'low':1, 'high':1}
  'social_multiplier_3':
    np.random: uniform
    function_kwargs: {'low':0, 'high':0.5}
  'socialDistance_time1':
    np.random: uniform
    function_kwargs: {'low': 12.0, 'high': 60.0}
  ## Other time events calculated in emodl relative to socialDistance_time1
  #'socialDistance_time1':
  #  custom_function: DateToTimestep
  #  function_kwargs: {'dates': 2020-03-12, 'startdate_col': 'startdate'}
  #'socialDistance_time2':
  #  custom_function: DateToTimestep
  #  function_kwargs: {'dates': 2020-03-17, 'startdate_col': 'startdate'}
  #'socialDistance_time3':
  #  custom_function: DateToTimestep
  #  function_kwargs: {'dates': 2020-03-21, 'startdate_col': 'startdate'}
  ### Reset Ki to defined proporions of it's initial value  
  ### (only used if corresponding emodl is defined)    
  ### Change in detection rates 
  ### (only used if corresponding emodl is defined)    
  'd_Sys_incr1':
    np.random: uniform
    function_kwargs: {'low':0.05, 'high':0.15}
  'd_Sys_incr2':
    np.random: uniform
    function_kwargs: {'low':0.30, 'high':0.43}
  #'detection_time_1':
  #  custom_function: DateToTimestep
  #  function_kwargs: {'dates': 2020-03-15, 'startdate_col': 'startdate'}
  #'detection_time_2':
  #  custom_function: DateToTimestep
  #  function_kwargs: {'dates': 2020-03-22, 'startdate_col': 'startdate'}
fitted_parameters:
  Kis:
    'EMS_1':
      np: linspace
      function_kwargs: {'start': 0, 'stop': 2, 'num': 50}
    'EMS_2':
      np: linspace
      function_kwargs: {'start': 0, 'stop': 2, 'num': 50}
    'EMS_3':
      np: linspace
      function_kwargs: {'start': 0, 'stop': 2, 'num': 50}
    'EMS_4':
      np: linspace
      function_kwargs: {'start': 0, 'stop': 2, 'num': 50}
    'EMS_5':
      np: linspace
      function_kwargs: {'start': 0, 'stop': 2, 'num': 50}
    'EMS_6':
      np: linspace
      function_kwargs: {'start': 0, 'stop': 2, 'num': 50}
    'EMS_7':
      np: linspace
      function_kwargs: {'start': 0, 'stop': 2, 'num': 50}
    'EMS_8':
      np: linspace
      function_kwargs: {'start': 0, 'stop': 2, 'num': 50}
    'EMS_9':
      np: linspace
      function_kwargs: {'start': 0, 'stop': 2, 'num': 50}
    'EMS_10':
      np: linspace
      function_kwargs: {'start': 0, 'stop': 2, 'num': 50}
    'EMS_11':
      np: linspace
      function_kwargs: {'start': 0, 'stop': 2, 'num': 50}