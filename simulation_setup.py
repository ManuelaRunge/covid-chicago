import numpy as np
from datetime import date, timedelta

# Simlation setup
def load_setting_parameter ():
    populations = {
        'IL': 12830632,
        'NMH_catchment': 315000,
        'Chicago': 2700000,
        'EMS_1': 736370,
        'EMS_2': 1124941,
        'EMS_3': 619366,
        'EMS_4': 698886,
        'EMS_5': 417674,
        'EMS_6': 788985,
        'EMS_7': 1814891,
        'EMS_8': 1673408,
        'EMS_9': 1970275,
        'EMS_10': 1052839,
        'EMS_11': 2716921
    }
    # Note IL, NMH, Chicago and EMS_3 were fitted, the other EMS area Kis need updating/checking
    Kis = {
        'NMH_catchment': np.linspace(1.5e-6, 2e-6, 3),
        'Chicago': np.linspace(2e-7, 3e-7, 3),
        'IL': np.linspace(3.5e-8, 5.3e-8, 3),    
        'EMS_1': np.linspace(5e-7, 9e-7, 3),
        'EMS_2': np.linspace(5e-7, 9e-7, 3),
        'EMS_3': np.linspace(5e-7, 9e-7, 3),   
        'EMS_4': np.linspace(5e-7, 9e-7, 3),
        'EMS_5': np.linspace(5e-7, 9e-7, 3),
        'EMS_6': np.linspace(5e-7, 9e-7, 3),       
        'EMS_7': np.linspace(5e-7, 9e-7, 3),
        'EMS_8': np.linspace(5e-7, 9e-7, 3),
        'EMS_9': np.linspace(5e-7, 9e-7, 3),
        'EMS_10': np.linspace(5e-7, 9e-7, 3),
        'EMS_11': np.linspace(5e-7, 9e-7, 3)         
    }
    startdate = {
        'NMH_catchment': date(2020, 2, 28),
        'Chicago': date(2020, 2, 20),
        'IL': date(2020, 2, 28),
        'EMS_1': date(2020, 2, 28),       
        'EMS_2': date(2020, 2, 28),
        'EMS_3': date(2020, 2, 28),       
        'EMS_4': date(2020, 2, 28),
        'EMS_5': date(2020, 2, 28),       
        'EMS_6': date(2020, 2, 28),
        'EMS_7': date(2020, 2, 28),       
        'EMS_8': date(2020, 2, 28),
        'EMS_9': date(2020, 2, 28),       
        'EMS_10': date(2020, 2, 28),
        'EMS_11': date(2020, 2, 28),       
    }

    return populations, Kis, startdate
    
def load_age_groups ():

    age4grp = {
        'NMH_catchment': [924766, 1135240, 941609, 713926], 
        #'Chicago': , 
        #'IL': , 
        'EMS_1': [170342, 184052, 203274, 182064],
        'EMS_2': [246836, 291953, 311148, 279459],
        'EMS_3': [128558, 147943, 181366, 163605],
        'EMS_4': [156230, 178549, 199940, 166815],
        'EMS_5': [89601, 103718, 113788, 112211],
        'EMS_6': [170529, 215422, 212023, 194309],
        'EMS_7': [459863, 455969, 532097, 377955],
        'EMS_8': [406488, 439749, 492527, 344784],
        'EMS_9': [482757, 506403, 591629, 399718],
        'EMS_10': [252497, 252957, 313926, 238921],
        'EMS_11': [656456, 889748, 697571, 500905]
    }
    age8grp = {
        'NMH_catchment': [924766, 1135240, 941609, 713926] ,
        #'Chicago': ,
        #'IL': ,
        'EMS_1': [78641,91701,94681	,89371,92396,110878,92988,89076],
        'EMS_2': [114210,132626,150792,141161,140827,170321,143642,135817],
        'EMS_3': [57069,71489,76506,71437,79844,101522,82573,81032],
        'EMS_4': [72063,84167,89843,88706,89248,110692,87058,79757],
        'EMS_5': [41533,48068,55005,48713,49212,64576,54930,57281],
        'EMS_6': [78524,92005,119387,96035,94670,117353,99559,94750],
        'EMS_7': [208260,251603,217013,238956,251248,280849,206843,171112],        
        'EMS_8': [187495,218993,204630,235119,233866,258661,190207,154577],
        'EMS_9': [223250,259507,232036,274367,284363,307266,221915,177803],
        'EMS_10': [113783,138714,118833,134124,147069,166857,127055,111866],
        'EMS_11': [326312,330144,432323,457425,349783,347788,270747,230158],
    }

    return age4grp, age8grp